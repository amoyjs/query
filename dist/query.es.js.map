{"version":3,"file":"query.es.js","sources":["../src/globals/extend.ts","../src/core/createQuery.ts","../src/extension/events.ts","../src/core/index.ts"],"sourcesContent":["export function extend(object: any = {}) {\n    Object.assign(this.prototype, object)\n}","export function createQuery(stage: any, query: () => void) {\n    return (selector: any) => {\n        const com = []\n        const type = typeof selector\n\n        switch (type) {\n            case 'string':\n                const parsed = parseStringQuery(selector)\n                parsed.map((item) => {\n                    com.push(...findBy(item.key, item.value, get(stage)))\n                })\n                break\n            case 'object':\n                com.push(...find(selector, get(stage)))\n                break\n            default:\n                break\n        }\n        return Object.assign(com, query.prototype)\n    }\n}\n\nconst REG_PROP = /\\[(.*)\\=(.*)\\]/ // 匹配 `[${key}=${value}]` 形式字符串\n\nfunction parseStringQuery(query: string = '') {\n    const result = []\n    query.split(',').map((query: string) => {\n        query = query.trim()\n        if (query.startsWith('.')) {\n            result.push({\n                key: 'name',\n                value: query.slice(1),\n            })\n        }\n        if (REG_PROP.test(query)) {\n            const [key, value] = parsePropQuery(query)\n            result.push({\n                key,\n                value,\n            })\n        }\n    })\n    return result\n}\n\nfunction parsePropQuery(string: string) {\n    const [_, key, value] = string.match(REG_PROP)\n    return [key, value]\n}\n\nfunction get(object: any) {\n    const result = []\n    const walk = (object: any) => {\n        if (object.children.length > 0) {\n            result.push(...object.children)\n            object.children.map((child: any) => walk(child))\n        }\n    }\n    walk(object)\n    return result\n}\n\nfunction find(item: any, array: any[]) {\n    return array.filter((_item) => _item === item)\n}\n\nfunction findBy(key: string, value: any, array: any[]) {\n    return array.filter((item) => item[key] === value)\n}","export function on(name: string = '', closure: () => void = () => {}) {\n    const events = name.split(' ')\n    for (let i = 0; i < this.length; i++) {\n        for (let j = 0; j < events.length; j++) {\n            this[i].interactive = true\n            this[i].on(events[j], closure)\n        }\n    }\n    return this\n}\n\nexport function off(name: string = '') {\n    const events = name.split(' ')\n    for (let i = 0; i < this.length; i++) {\n        for (let j = 0; j < events.length; j++) {\n            this[i].off(events[j])\n        }\n    }\n    return this\n}","import { extend } from '../globals'\nimport { createQuery } from './createQuery'\nimport * as extension from '../extension'\n\n// @ts-ignore\nexport const query = (stage: any) => window.$ = createQuery(stage, query)\n\nquery.extend = extend\n\nquery.extend(extension)\n\n"],"names":[],"mappings":"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"}