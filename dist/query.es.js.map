{"version":3,"file":"query.es.js","sources":["../src/prototype/events.ts","../src/index.ts"],"sourcesContent":["export function on(name: string = '', closure: () => void = () => {}) {\n    const events = name.split(' ')\n    for (let i = 0; i < this.length; i++) {\n        for (let j = 0; j < events.length; j++) {\n            this[i].interactive = true\n            this[i].on(events[j], closure)\n        }\n    }\n}\n\nexport function off(name: string = '') {\n    const events = name.split(' ')\n    for (let i = 0; i < this.length; i++) {\n        for (let j = 0; j < events.length; j++) {\n            this[i].off(events[j])\n        }\n    }\n}","import * as prototype from './prototype'\n\nexport default function query(stage: any) {\n    const $ = createQuery(stage)\n    // @ts-ignore\n    window.$ = $\n    return $\n}\n\nfunction createQuery(stage: any) {\n    return (selector: any) => {\n        const com = []\n        const type = typeof selector\n\n        switch (type) {\n            case 'string':\n                com.push(...stage.children)\n                break\n            case 'object':\n                com.push(selector)\n                break\n            default:\n                break\n        }\n        return Object.assign(com, query.prototype)\n    }\n}\nObject.assign(query.prototype, prototype)\n\nfunction parseQuery(query: any) {\n    const type = typeof query\n    if (type === 'string') {\n        const querys = query.split(',').map((query: string) => {\n            query = query.trim()\n            if (query.startsWith('.')) {\n                return {\n                    query: query.slice(1),\n                    type: 'class',\n                }\n            }\n            if (query.startsWith('#')) {\n                return {\n                    query: query.slice(1),\n                    type: 'id',\n                }\n            }\n        })\n        return querys.map()\n    }\n    return []\n}\n"],"names":[],"mappings":"SAAgB,EAAE,CAAC,IAAiB,EAAE,OAA8B;IAAjD,qBAAA,EAAA,SAAiB;IAAE,wBAAA,EAAA,yBAA8B;IAChE,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAA;YAC1B,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;SACjC;KACJ;CACJ;AAED,SAAgB,GAAG,CAAC,IAAiB;IAAjB,qBAAA,EAAA,SAAiB;IACjC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;SACzB;KACJ;CACJ;;;;;;;;;;SCfuB,KAAK,CAAC,KAAU;IACpC,IAAM,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,CAAA;;IAE5B,MAAM,CAAC,CAAC,GAAG,CAAC,CAAA;IACZ,OAAO,CAAC,CAAA;CACX;AAED,SAAS,WAAW,CAAC,KAAU;IAC3B,OAAO,UAAC,QAAa;QACjB,IAAM,GAAG,GAAG,EAAE,CAAA;QACd,IAAM,IAAI,GAAG,OAAO,QAAQ,CAAA;QAE5B,QAAQ,IAAI;YACR,KAAK,QAAQ;gBACT,GAAG,CAAC,IAAI,OAAR,GAAG,EAAS,KAAK,CAAC,QAAQ,EAAC;gBAC3B,MAAK;YACT,KAAK,QAAQ;gBACT,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;gBAClB,MAAK;YACT;gBACI,MAAK;SACZ;QACD,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,CAAA;KAC7C,CAAA;CACJ;AACD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;;;;"}